---
- hosts: windows2019
  tasks:
    - name: Defining variables
      ansible.windows.win_environment:
        variables:
          JAVA_HOME: c:\Alfresco\JDK11\jdk-11.0.11+9\
          ALF_HOME: c:\Alfresco\alfresco
          ALF_DATA_HOME: c:\Alfresco\alfresco\alf_data
          CATALINA_HOME: c:\Alfresco\alfresco\tomcat
        level: machine
    - name: Creando directorios
      ansible.windows.win_file:
        path: "{{ item }}"
        state: directory
      loop:
        - c:\Alfresco\installers
        - c:\Alfresco\JDK11
        - c:\Alfresco\alfresco\tomcat\shared\classes\alfresco\web-extension
        - c:\Alfresco\alfresco\tomcat\shared\lib
        - c:\Alfresco\alfresco\tomcat\conf\Catalina\localhost
        - c:\Alfresco\alfresco\tomcat
        - c:\Alfresco\alfresco\tomcat\shared\classes\alfresco\extension
        - c:\Alfresco\alfresco\alf_data
        - c:\Alfresco\alfresco\logs
        - c:\Alfresco\alfresco\modules\platform
        - c:\Alfresco\alfresco\modules\share
        - c:\Alfresco\alfresco\bin
        - c:\Alfresco\alfresco\addons\war
        - c:\Alfresco\alfresco\addons\share
        - c:\Alfresco\alfresco\addons\alfresco
        - c:\Alfresco\nginx
    - name: Downloading installers
      ansible.windows.win_get_url:
        url: "{{ item.url }}"
        dest: "{{ item.dest }} "
      loop:
        - { url: 'https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.11%2B9/OpenJDK11U-jdk_x64_windows_hotspot_11.0.11_9.zip', dest: C:\Alfresco\installers\OpenJDK11U-jdk_x64_windows_hotspot_11.0.11_9.zip }
        - { url: 'https://download.imagemagick.org/ImageMagick/download/binaries/ImageMagick-7.1.0-2-portable-Q16-x64.zip', dest: C:\Alfresco\installers\ImageMagick-7.1.0-2-portable-Q16-x64.zip }
        - { url: 'https://nginx.org/download/nginx-1.21.0.zip', dest: C:\Alfresco\installers\nginx-1.21.0.zip }
    - name: Unarchive JDK
      community.windows.win_unzip:
        src: C:\Alfresco\installers\OpenJDK11U-jdk_x64_windows_hotspot_11.0.11_9.zip
        dest: c:\Alfresco\JDK11
    - name: Install Tomcat
      win_package:
        path: https://downloads.apache.org/tomcat/tomcat-8/v8.5.68/bin/apache-tomcat-8.5.68.exe
        arguments: /S /D=c:\Alfresco\alfresco\tomcat
        state: present
    - name: Downloading config files
      ansible.windows.win_get_url:
        url: "{{ item.url }}"
        dest: "{{ item.dest }} "
      loop:
        - { url: 'https://raw.githubusercontent.com/Greencorecr/alfresco_windows/main/tomcat/server.xml', dest: C:\Alfresco\alfresco\tomcat\conf\server.xml }
        - { url: 'https://downloads.loftux.net/public/content/org/alfresco/alfresco-mmt/6.0/alfresco-mmt-6.0.jar', dest: C:\Alfresco\alfresco\addons\alfresco-mmt.jar }
        - { url: 'https://github.com/Greencorecr/alfresco_windows/raw/main/tomcat/alfresco-pdf-renderer', dest: c:\Alfresco\alfresco\bin\alfresco-pdf-renderer}
        - { url: 'https://artifacts.alfresco.com/nexus/service/local/repositories/releases/content/org/alfresco/content-services-community/6.2.0-ga/content-services-community-6.2.0-ga.war', dest: c:\Alfresco\alfresco\addons\war\alfresco.war }
        - { url: 'https://github.com/Greencorecr/alfresco_windows/raw/main/tomcat/alfresco.xml', dest: c:\Alfresco\alfresco\tomcat\conf\Catalina\localhost\alfresco.xml }
        - { url: 'https://artifacts.alfresco.com/nexus/service/local/repositories/releases/content/org/alfresco/share/6.2.0/share-6.2.0.war', dest: c:\Alfresco\alfresco\addons\war\share.war }
        - { url: 'https://github.com/Greencorecr/alfresco_windows/raw/main/tomcat/share.xml', dest: c:\Alfresco\alfresco\tomcat\conf\Catalina\localhost\share.xml }
        - { url: 'https://artifacts.alfresco.com/nexus/service/local/repositories/releases/content/org/alfresco/alfresco-share-services/6.2.0/alfresco-share-services-6.2.0.amp', dest: c:\Alfresco\alfresco\addons\alfresco\alfresco-share-services-6.2.0.amp }
        - { url: 'https://raw.githubusercontent.com/Greencorecr/alfresco_windows/main/tomcat/catalina.properties', dest: C:\Alfresco\alfresco\tomcat\conf\catalina.properties }
        - { url: 'https://raw.githubusercontent.com/Greencorecr/alfresco_windows/main/tomcat/tomcat-users.xml', dest: C:\Alfresco\alfresco\tomcat\conf\tomcat-users.xml }
        - { url: 'https://raw.githubusercontent.com/Greencorecr/alfresco_windows/main/tomcat/context.xml', dest: C:\Alfresco\alfresco\tomcat\conf\context.xml }
        - { url: 'https://raw.githubusercontent.com/Greencorecr/alfresco_windows/main/tomcat/alfresco-global.properties', dest: C:\Alfresco\alfresco\tomcat\shared\classes\alfresco-global.properties }
        - { url: 'https://raw.githubusercontent.com/Greencorecr/alfresco_windows/main/tomcat/share-config-custom.xml', dest: C:\Alfresco\alfresco\tomcat\shared\classes\alfresco\web-extension\share-config-custom.xml }
        - { url: 'https://jdbc.postgresql.org/download/postgresql-42.2.5.jar', dest: C:\Alfresco\alfresco\tomcat\shared\lib\postgresql-42.2.5.jar }
    - name: Installs Libreoffice from MSI
      win_package:
        path: https://mirrors.ucr.ac.cr/tdf/libreoffice/stable/7.1.4/win/x86_64/LibreOffice_7.1.4_Win_x64.msi
        state: present
    - name: Installs Pgsql
      win_package:
        path: https://get.enterprisedb.com/postgresql/postgresql-11.12-2-windows-x64.exe
        arguments: --mode unattended --prefix c:\Alfresco\PostgreSQL11
        state: present
        creates_path: c:\Alfresco\PostgreSQL11
    - name: Unarchive nginx
      community.windows.win_unzip:
        src: C:\Alfresco\installers\nginx-1.21.0.zip
        dest: c:\Alfresco\nginx
    - name: Borrando aplicaciones default de tomcat
      ansible.windows.win_file:
        path: c:\Alfresco\alfresco\tomcat\webapps
        state: absent
    - name: Recreando directorio webapps
      ansible.windows.win_file:
        path: c:\Alfresco\alfresco\tomcat\webapps
        state: directory
    - name: Unarchive Imagemagick
      community.windows.win_unzip:
        src: C:\Alfresco\installers\ImageMagick-7.1.0-2-portable-Q16-x64.zip
        dest: c:\Alfresco\ImageMagick

          #   sudo curl -s -o $ALF_HOME/solr6.zip $ASS_DOWNLOAD
          #   echogreen "Expanding Solr6 file..."
          #   cd $ALF_HOME
          #   sudo unzip -q solr6.zip
          #   sudo mv alfresco-search-services solr6
          #   sudo curl -s -o /etc/systemd/system/alfresco-search.service $BASE_DOWNLOAD/search/alfresco-search.service
          #   sudo curl -s -o $ALF_HOME/solr6/solrhome/conf/shared.properties $BASE_DOWNLOAD/search/shared.properties
          #   sudo curl -s -o $ALF_HOME/solr6/solr.in.sh $BASE_DOWNLOAD/search/solr.in.sh

          #     curl -s -O $GOOGLEDOCSREPO
          #     sudo mv alfresco-googledocs-repo*.amp $ALF_HOME/addons/alfresco/
          #     curl  -s -O $GOOGLEDOCSSHARE
          #     sudo mv alfresco-googledocs-share* $ALF_HOME/addons/share/
          #     (cd $ALF_HOME/addons/alfresco;sudo curl -# -O $AOS_AMP)
          #     sudo curl -s -o $ALF_HOME/tomcat/webapps/_vti_bin.war $AOS_VTI
          #     sudo curl -s -o $ALF_HOME/tomcat/webapps/ROOT.war $AOS_SERVER_ROOT
          # 
          #         sudo $ALF_HOME/addons/apply.sh all
          #   sudo chmod u+x $ALF_HOME/solr6/solr.in.sh

          #  if [ ! -f "$ALF_HOME/addons/apply.sh" ]; then
          #    echo "Downloading apply.sh script..."
          #    sudo curl -s -o $ALF_HOME/addons/apply.sh $BASE_DOWNLOAD/scripts/apply.sh
          #    sudo chmod u+x $ALF_HOME/addons/apply.sh


          #  sudo curl -s -o /etc/nginx/nginx.conf $BASE_DOWNLOAD/nginx/nginx.conf
          #  sudo curl -c 5 /etc/nginx/conf.d/alfresco.conf $BASE_DOWNLOAD/nginx/default


          # TODO, crear servicios

#    sudo curl -s -o $ALF_HOME/alfresco-service.sh $BASE_DOWNLOAD/scripts/alfresco-service.sh
#    sudo chmod 755 $ALF_HOME/alfresco-service.sh
#    sudo sed -i "s/@@LOCALESUPPORT@@/$LOCALESUPPORT/g" $ALF_HOME/alfresco-service.sh 
#    # Enable the service
#    sudo systemctl enable alfresco.service
#    sudo systemctl daemon-reload
          #   if [ ! -f "$ALF_HOME/scripts/postgresql.sh" ]; then
          #     echo "Downloading postgresql.sh install and setup script..."
          #     sudo curl -s -o $ALF_HOME/scripts/postgresql.sh $BASE_DOWNLOAD/scripts/postgresql.sh
          #   fi
          # 
          #   if [ ! -f "$ALF_HOME/scripts/limitconvert.sh" ]; then
          #     echo "Downloading limitconvert.sh script..."
          #     sudo curl -s -o $ALF_HOME/scripts/limitconvert.sh $BASE_DOWNLOAD/scripts/limitconvert.sh
          #   fi

# Las siguientes l√≠neas que dicen #listo#, necesitan un condicional para que no se ejecuten 2 veces.

